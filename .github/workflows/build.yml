name: Vercel Build

on:
  push:
    paths:
      - "!**/.github/**"
      - "src/**"
      - "static/**"
      - "**/*.json"
      - "**/*.ya?ml"
      - "**/*.ts"
      - "**/*.c?jsx?"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.0

      - name: Install Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: package.json

      - name: Install pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          run_install: false

      - name: Set outputs
        id: set-outputs
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4.1.0
        with:
          path: ${{ steps.set-outputs.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        shell: bash
        run: pnpm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Create archive
        shell: bash
        run: tar -czvf ${{ github.workspace }}/${{ github.event.repository.name  }}-${{ steps.set-outputs.outputs.SHORT_SHA }}.tar.gz -C ${{ github.workspace }}/.vercel/output/ .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ${{ github.event.repository.name  }}-${{ steps.set-outputs.outputs.SHORT_SHA }}
          path: ${{ github.workspace }}/${{ github.event.repository.name  }}-${{ steps.set-outputs.outputs.SHORT_SHA }}.tar.gz
